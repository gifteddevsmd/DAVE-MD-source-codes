const { davlo } = require("../davlo");

// Helper function for animated messages
async function sendAnimatedMessage(m, sock, { 
  initialText, 
  frames, 
  frameDelay = 1000, 
  reactEmoji = '‚ú®'
}) {
  try {
    // Add reaction to show davlo was received
    if (reactEmoji) await m.react(reactEmoji);

    // Send initial message
    const sentMsg = await sock.sendMessage(m.from, { text: initialText });
    if (!sentMsg?.key) {
      return m.reply("‚ùå Failed to send initial message");
    }

    // Send each frame with delay
    for (const frame of frames) {
      await new Promise(resolve => setTimeout(resolve, frameDelay));
      await sock.sendMessage(m.from, {
        text: frame,
        edit: sentMsg.key
      }).catch(e => console.error("Frame error:", e.message));
    }

  } catch (error) {
    console.error("Animation error:", error);
    m.reply(`‚ùå Error: ${error.message}`);
  }
}

// Hand Animation Command
davlo({
  pattern: "hand",
  desc: "Hand animation (NSFW)",
  category: "fun",
  react: '‚úä'
}, async (m, sock) => {
  const frames = [
    '8‚úäÔ∏è===D', "8=‚úäÔ∏è==D", "8==‚úäÔ∏è=D", "8===‚úäÔ∏èD", 
    "8==‚úäÔ∏è=D", "8=‚úäÔ∏è==D", "8‚úäÔ∏è===D", "8=‚úäÔ∏è==D", 
    "8==‚úäÔ∏è=D", '8===‚úäÔ∏èD', "8==‚úäÔ∏è=D", "8=‚úäÔ∏è==D", 
    '8‚úäÔ∏è===D', "8=‚úäÔ∏è==D", "8==‚úäÔ∏è=D", "8===‚úäÔ∏èD", 
    "8==‚úäÔ∏è=D", '8=‚úäÔ∏è==D', "8‚úäÔ∏è===D", '8=‚úäÔ∏è==D', 
    "8==‚úäÔ∏è=D", "8===‚úäÔ∏èD üí¶", "8==‚úäÔ∏è=Düí¶ üí¶", "8=‚úäÔ∏è==D üí¶üí¶ üí¶"
  ];
  
  await sendAnimatedMessage(m, sock, {
    initialText: "‚úäüèª STARTED... üí¶",
    frames,
    frameDelay: 800,
    reactEmoji: '‚úä'
  });
});

// Happy Animation Command
davlo({
  pattern: "hpy",
  desc: "Happy faces animation",
  category: "fun",
  react: 'üòÅ'
}, async (m, sock) => {
  const frames = [
    'üòÉ', 'üòÑ', 'üòÅ', 'üòä', 'üòé', 'ü•≥', 'üò∏', 'üòπ', 
    'üåû', 'üåà', 'üòÉ', 'üòÑ', 'üòÅ', 'üòä', 'üòé', 'ü•≥', 
    'üò∏', 'üòπ', 'üåû', 'üåà', 'üòÉ', 'üòÑ', 'üòÅ', 'üòä'
  ];
  
  await sendAnimatedMessage(m, sock, {
    initialText: 'üòÇ',
    frames,
    frameDelay: 300
  });
});

// Heart Animation Command
davlo({
  pattern: "hrt",
  desc: "Heart animation",
  category: "fun",
  react: 'ü´Ä'
}, async (m, sock) => {
  const frames = [
    'üíñ', 'üíó', 'üíï', '‚ù§Ô∏è', 'üíõ', 'üíö', 'ü´Ä', 'üíô', 
    'üíú', 'üñ§', '‚ô•Ô∏è', 'ü§ç', 'ü§é', 'üíó', 'üíû', 'üíì', 
    'üíò', 'üíù', '‚ô•Ô∏è', 'üíü', 'ü´Ä', '‚ù§Ô∏è'
  ];
  
  await sendAnimatedMessage(m, sock, {
    initialText: '‚ù§Ô∏è',
    frames,
    frameDelay: 250
  });
});

// Anger Animation Command
davlo({
  pattern: "anger",
  desc: "Angry faces animation",
  category: "fun",
  react: 'ü§°'
}, async (m, sock) => {
  const frames = [
    'üò°', 'üò†', 'ü§¨', 'üò§', 'üòæ', 'üò°', 'üò†', 'ü§¨', 'üò§', 'üòæ'
  ];
  
  await sendAnimatedMessage(m, sock, {
    initialText: 'ü§°',
    frames,
    frameDelay: 800
  });
});

// Sad Animation Command
davlo({
  pattern: "sad",
  desc: "Sad faces animation",
  category: "fun",
  react: 'üò´'
}, async (m, sock) => {
  const frames = [
    'ü•∫', 'üòü', 'üòï', 'üòñ', 'üò´', 'üôÅ', 'üò©', 'üò•', 
    'üòì', 'üò™', 'üò¢', 'üòî', 'üòû', 'üò≠', 'üíî', 'üò≠', 'üòø'
  ];
  
  await sendAnimatedMessage(m, sock, {
    initialText: 'üò≠',
    frames,
    frameDelay: 800
  });
});

// Shy Animation Command
davlo({
  pattern: "shy",
  desc: "Shy faces animation",
  category: "fun",
  react: 'üò≥'
}, async (m, sock) => {
  const frames = [
    'üò≥', 'üòä', 'üò∂', 'üôà', 'üôä', 'üò≥', 'üòä', 'üò∂', 'üôà', 'üôä'
  ];
  
  await sendAnimatedMessage(m, sock, {
    initialText: "> dev",
    frames,
    frameDelay: 800
  });
});

// Moon Animation Command
davlo({
  pattern: "mon",
  desc: "Moon phases animation",
  category: "fun",
  react: 'üåô'
}, async (m, sock) => {
  const frames = [
    'üåó', 'üåò', 'üåë', 'üåí', 'üåì', 'üåî', 'üåï', 'üåñ', 
    'üåó', 'üåò', 'üåë', 'üåí', 'üåì', 'üåî', 'üåï', 'üåñ', 
    'üåó', 'üåò', 'üåë', 'üåí', 'üåì', 'üåî', 'üåï', 'üåñ', 
    'üåó', 'üåò', 'üåë', 'üåí', 'üåì', 'üåî', 'üåï', "üåöüåù"
  ];
  
  await sendAnimatedMessage(m, sock, {
    initialText: 'üåô',
    frames,
    frameDelay: 800
  });
});

// Confused Animation Command
davlo({
  pattern: "confused",
  desc: "Confused faces animation",
  category: "fun",
  react: 'üôÄ'
}, async (m, sock) => {
  const frames = [
    'üòï', 'üòü', 'üòµ', 'ü§î', 'üòñ', 'üò≤', 'üò¶', 'ü§∑', 
    "ü§∑‚Äç‚ôÇÔ∏è", 'ü§∑‚Äç‚ôÄÔ∏è'
  ];
  
  await sendAnimatedMessage(m, sock, {
    initialText: 'üôÄ',
    frames,
    frameDelay: 800
  });
});

// Kiss Animation Command
davlo({
  pattern: "kiss",
  desc: "Kissy faces animation",
  category: "fun",
  react: '‚ô•Ô∏è'
}, async (m, sock) => {
  const frames = [
    'ü•µ', '‚ù§Ô∏è', 'üíã', 'üò´', 'ü§§', 'üòã', 'ü•µ', 'ü•∂', 
    'üôä', 'üòª', 'üôà', 'üíã', 'ü´Ç', 'ü´Ä', 'üëÖ', 'üëÑ', 'üíã'
  ];
  
  await sendAnimatedMessage(m, sock, {
    initialText: '‚ô•Ô∏è',
    frames,
    frameDelay: 800
  });
});

// "Nikal" Animation Command (ASCII Art)
davlo({
  pattern: "nikal",
  desc: "Funny ASCII art animation",
  category: "fun",
  react: 'üóø'
}, async (m, sock) => {
  const frames = [
    `‚†Ä‚†Ä‚†Ä‚£†‚£∂‚°æ‚†è‚†â‚†ô‚†≥‚¢¶‚°Ä‚†Ä‚†Ä‚†Ä‚¢†‚†û‚†â‚†ô‚†≤‚°Ä‚†Ä
 ‚†Ä‚£¥‚†ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä     ‚¢≥‚°Ä‚†Ä‚°è‚†Ä‚†Ä‚†Ä   ‚†Ä  ‚¢∑
‚¢†‚£ü‚£ã‚°Ä‚¢Ä‚£Ä‚£Ä‚°Ä‚†Ä‚£Ä‚°Ä   ‚£ß‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä  ‚†Ä    ‚°á
‚¢∏‚£Ø‚°≠‚†Å‚†∏‚£õ‚£ü‚†Ü‚°¥‚£ª‚°≤     ‚£ø  ‚£∏   Nikal   ‚°á
 ‚£ü‚£ø‚°≠‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢±‚†Ä‚†Ä      ‚£ø  ‚¢π‚†Ä          ‚°á
  ‚†ô‚¢ø‚£Ø‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä   ‚†Ä   ‚°ø ‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä    ‚°º
‚†Ä‚†Ä‚†Ä‚†π‚£∂‚†Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°¥‚†É‚†Ä   ‚†ò‚†§‚£Ñ‚£†‚†û‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£∑‚°¶‚¢§‚°§‚¢§‚£û‚£Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢Ä‚£§‚£¥‚£ø‚£è‚†Å‚†Ä‚†Ä‚†∏‚£è‚¢Ø‚£∑‚£ñ‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢Ä‚£æ‚£Ω‚£ø‚£ø‚£ø‚£ø‚†õ‚¢≤‚£∂‚£æ‚¢â‚°∑‚£ø‚£ø‚†µ‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚£º‚£ø‚†ç‚†â‚£ø‚°≠‚†â‚†ô‚¢∫‚£á‚£º‚°è‚†Ä‚†Ä ‚†Ä‚£Ñ‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä`,
    // Other ASCII frames...
  ];
  
  await sendAnimatedMessage(m, sock, {
    initialText: "DAVE-MDüóø",
    frames,
    frameDelay: 1500
  });
});